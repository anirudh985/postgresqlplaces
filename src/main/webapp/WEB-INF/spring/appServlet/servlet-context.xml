<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- <context:component-scan base-package="com.search.app" /> -->
	
	<beans:bean class="com.search.app.HomeController">
	</beans:bean>
	
	<beans:bean class="com.search.app.AppController">
		<beans:property name="utilities" ref="utilities"/>
	</beans:bean>
	
	<beans:bean id="utilities" class="com.search.service.UtilitiesImpl">
		<beans:property name="searchLocationDao" ref="searchLocationDao"/>
	</beans:bean>
	
	<beans:bean id="searchLocationDao" class="com.search.dao.SearchLocationDao">
		<beans:property name="hibernateTemplate" ref="hibernateTemplate"/>
	</beans:bean>
	
	<beans:bean id="hibernateTemplate" class="org.springframework.orm.hibernate5.HibernateTemplate">
		<beans:property name="sessionFactory" ref="sessionFactory"/>
	</beans:bean>
	
	 <beans:bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="mappingResources">
			<beans:list>
				<beans:value>com/search/resources/SearchLocation.hbm.xml</beans:value>
			</beans:list>
		</beans:property>
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</beans:prop>
				<beans:prop key="hibernate.connection.driver_class">com.mysql.jdbc.Driver</beans:prop>
				<beans:prop key="hibernate.connection.url">jdbc:mysql://db4free.net:3306/xeonziondb</beans:prop>
				<beans:prop key="hibernate.connection.username">xeonzion</beans:prop>
				<beans:prop key="hibernate.connection.password">zionxeon</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>

	<beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <beans:property name="url" value="jdbc:mysql://db4free.net:3306/xeonziondb" />
        <beans:property name="username" value="xeonzion" />
        <beans:property name="password" value="zionxeon" />
    </beans:bean>
    
    <!-- <beans:bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="mappingResources">
			<beans:list>
				<beans:value>com/search/resources/SearchLocation.hbm.xml</beans:value>
			</beans:list>
		</beans:property>
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQL94Dialect</beans:prop>
				<beans:prop key="hibernate.connection.driver_class">org.postgresql.Driver</beans:prop>
				<beans:prop key="hibernate.connection.url">#{ 'jdbc:postgresql://' + @dbUrl.getHost() + ':' + @dbUrl.getPort() + @dbUrl.getPath() }</beans:prop>
				<beans:prop key="hibernate.connection.username">postgres</beans:prop>
				<beans:prop key="hibernate.connection.password">root</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>

	<beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <beans:property name="driverClassName" value="org.postgresql.Driver" />
        <beans:property name="url" value="#{ 'jdbc:postgresql://'  +@dbUrl.getHost() + '': + @dbUrl.getPort() + @dbUrl.getPath() }" />
        <beans:property name="username" value="postgres" />
        <beans:property name="password" value="root" />
    </beans:bean> -->
    
    
    <!-- <beans:bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="mappingResources">
			<beans:list>
				<beans:value>com/search/resources/SearchLocation.hbm.xml</beans:value>
			</beans:list>
		</beans:property>
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQL94Dialect</beans:prop>
				<beans:prop key="hibernate.connection.driver_class">org.postgresql.Driver</beans:prop>
<<<<<<< Updated upstream
				<beans:prop key="hibernate.connection.url">#{ 'jdbc:postgresql://' + @dbUrl.getHost() + ':' + @dbUrl.getPort() + @dbUrl.getPath() }</beans:prop>
				<beans:prop key="hibernate.connection.username">#{ @dbUrl.getUserInfo().split(':')[0] }</beans:prop>
				<beans:prop key="hibernate.connection.password">#{ @dbUrl.getUserInfo().split(':')[1] }</beans:prop>
=======
				<beans:prop key="hibernate.connection.url">jdbc:postgresql://localhost:5432/testdb</beans:prop>
				<beans:prop key="hibernate.connection.username">postgres</beans:prop>
				<beans:prop key="hibernate.connection.password">root</beans:prop>
>>>>>>> Stashed changes
			</beans:props>
		</beans:property>
	</beans:bean>

	<beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <beans:property name="driverClassName" value="org.postgresql.Driver" />
<<<<<<< Updated upstream
        <beans:property name="url" value="#{ 'jdbc:postgresql://' + @dbUrl.getHost() + ':' + @dbUrl.getPort() + @dbUrl.getPath() }" />
        <beans:property name="username" value="#{ @dbUrl.getUserInfo().split(':')[0] }" />
        <beans:property name="password" value="#{ @dbUrl.getUserInfo().split(':')[1] }" />
    </beans:bean>
    
     <beans:bean class="java.net.URI" id="dbUrl">
      <beans:constructor-arg value="postgres://dsagpnasefpppc:pKpFj_OpQMd2bMfoTo63z3rIhf@ec2-107-20-148-211.compute-1.amazonaws.com:5432/d2p9lk6etjp4ph"/>
     </beans:bean> -->
     
     
     
      <!-- <beans:bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="mappingResources">
			<beans:list>
				<beans:value>SearchLocation.hbm.xml</beans:value>
        <beans:property name="url" value="jdbc:postgresql://localhost:5432/testdb" />
        <beans:property name="username" value="postgres" />
        <beans:property name="password" value="root" />
    </beans:bean> -->
    
    <!-- <beans:bean class="java.net.URI" id="dbUrl">
      <beans:constructor-arg value="postgres://postgres:root@localhost:8080/testdb"/>
    </beans:bean> -->
    
    
    
   <!--  <beans:bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="mappingResources">
			<beans:list>
				<beans:value>com/search/resources/SearchLocation.hbm.xml</beans:value>
>>>>>>> Stashed changes
			</beans:list>
		</beans:property>
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</beans:prop>
				<beans:prop key="hibernate.connection.driver_class">com.mysql.jdbc.Driver</beans:prop>
				<beans:prop key="hibernate.connection.url">jdbc:mysql://db4free.net:3306/xeonziondb</beans:prop>
				<beans:prop key="hibernate.connection.username">xeonzion</beans:prop>
				<beans:prop key="hibernate.connection.password">zionxeon</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>

	<beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
<<<<<<< Updated upstream
        	<beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
        	<beans:property name="url" value="jdbc:mysql://db4free.net:3306/xeonziondb" />
        	<beans:property name="username" value="xeonzion" />
        	<beans:property name="password" value="zionxeon" />
    	</beans:bean>
=======
        <beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <beans:property name="url" value="jdbc:mysql://db4free.net:3306/xeonziondb" />
        <beans:property name="username" value="xeonzion" />
        <beans:property name="password" value="zionxeon" />
    </beans:bean> -->
</beans:beans>
